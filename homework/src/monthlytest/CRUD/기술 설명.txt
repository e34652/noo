공통

이 프로그램은 JDBC 라이브러리를 통해 DB와 연동된 CRUD 기능 구현을 목적으로 만들어졌습니다
Connection 클래스로 mySQL로그인을 하고 Statement 클래스를 통해 sql문을 DB에서 실행시키도록 하는 방식입니다

DB에서의 실행 결과를 ResultSet 또는 Result 변수로 확인하며 그 결과에 따라 어떤 코드가 실행될지 결정됩니다
또한 try-catch문과 조건문을 통해 예외 상황에 대처하고 있습니다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

CLI
if문과 switch문 while 문을 통해 기능을 구현했으며 각 기능을 메소드로 구분하였습니다 
사용자 경험을 고려해 구체적인 설명과 이런저런 편의성을 

 
조회
전체 조회의 경우 Sql문의 실행 결과를 ResultSet으로 받고 while문으로 테이블을 돌며 출력합니다
사원 조회의 경우 사번과 이름이 일치할 것을 where 문을 통해 조건을 설정해 해당하는 행만 출력합니다
입력한 사번과 이름이 동시에 일치해야 하므로 중복된 데이터 조회를 최대한 피하도록 했습니다
일치하는 사원의 정보가 로드되면 데이터 수정과 삭제를 선택할 수 있습니다


수정 삭제
사원 데이터 수정의 경우 수정을 원하는 열과 값을 변수로 두고 switch문을 활용해 sql문을 동적으로 입력할 수 있게 했으며
조회 때 받은 ename과 empno를 매개변수로 받아 조건으로 활용하고 이름을 수정하는 경우 ename을 갱신해주어 오류를 방지했습니다


추가
사원 데이터 추가의 경우 입력한 값을 sql문을 통해 insert합니다
부서코드와 입사일을 양식에 맞춰 입력할 수 있도록 조건문으로 신경을 썼고 문자를 입력하는 경우 대응하는 예외메시지가 출력됩니다

클래스로 나누어 캡슐화를 하지 못한 부분이 아쉽고 
데이터 수정 부분에서 인터페이스를 활용해 다형성을 구현할 여지가 있음에도 시도하지 않은 부분이 아쉽습니다

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

CLI2 에서는 정보 수정 코드에 구현객체를 활용해 다형성을 구현해보려 노력했습니다
수준은 낮지만 기능은 제대로 구현이 되는 것 같습니다 

Column 이라는 인터페이스에 열의 값을 수정하는 코드가 담길 update라는 추상메서드를 선언합니다
수정가능한 열의 개수 만큼 구현 클래스를 만들고 각 구현 클래스에서 추상 메서드를 재정의합니다

그리고 생성된 구현 객체로 다형성을 구현하는 Update 클래스를 생성합니다 
Update 클래스의 메소드 매개값으로는 인터페이스 타입의 구현 객체 Column column과

SQL문에서 where절에서 사번을 비교할 때 필요한 변수 empno
그리고 구현클래스에서 메소드를 실행할 때 필요한 Statement 객체를 


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
GUI는 
액션리스너를 통해 객체들과의 상호작용을 구현했습니다

기본적인 원리는 CLI와 같으며 실행 결과를 JTextArea에 출력한다는 부분이 다릅니다
그리고 변수와 값이 그에 대응하는 레이블과 텍스트필드로 구현되어 상황을 더욱 직관적으로 확인할 수 있게 되었습니다

새 창을 열어 날짜 입력과 개별 수정을 편하게 할 수 있고 
날짜 입력은 JComboBox를 통해 편리하게 선택할 수 있고 for문을 통해 각 항목을 추가했습니다
개별 수정은 테이블의 column 값을 case 문을 통해 선택할 수있게 하여 사용법을 단순화 했고 
텍스트 필드 값을 변수에 대입해 sql문을 동적으로 실행될 수 있도록 하였습니다
